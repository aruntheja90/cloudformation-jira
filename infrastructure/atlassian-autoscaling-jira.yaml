# Note, the development environment will only spin a min of 2 instance (HA Support)
# The production environment will spin a min of 2 instance (HA support)
# You can adjust the ASMIN, ASMAX, ASDES at the master.yaml file
# to meet your instances spin numbers.
#
---
AWSTemplateFormatVersion: "2010-09-09"
Description: >
    This template deploys an AutoScaling Launch Config and Group for Jira
Parameters: 

  PMServerEnv:
    Description: "Server Environment name."
    ConstraintDescription: "Choose an Environment from the drop down"
    Type: "String"
    AllowedValues: 
      - "dev"
      - "staging"
      - "prod"

  PMKeyName:
    Description: "Enter an existing EC2 KeyPair. Default is MyEC2Key"
    Type: "String"

  PMJiraInstanceType: 
    Description: "Enter an instance type. Default is t2.micro."
    Type: "String"

  PMSpotPrice:
    Description: "Maximum spot price to bid in USD (e.g.: 0.32)."
    Type: "Number"

  PMPublicSubnets:
    Description: "Subnets to launch instances into"
    Type: "List<AWS::EC2::Subnet::Id>"

  PMMyJiraSG:
    Description: "Select the Security Group to use for the EC2 hosts"
    Type: "AWS::EC2::SecurityGroup::Id"

  PMJiraLoadBalancer:
    Description: "A reference to the Jira Load Balancer"
    Type: "String"

  PMIAMS3CWInstanceProfile:
    Description: "A reference to the IamInstanceProfile"
    Type: "String"

  PMRegionAMI:
    Description: "A reference to the Region AMI"
    Type: "String"

  PMAutoscaleMin:
    Description: "A reference to the MinSize"
    Type: "String"

  PMAutoscaleMax:
    Description: "A reference to the MaxSize"
    Type: "String"

  PMAutoscaleDes:
    Description: "A reference to the DesiredCapacity"
    Type: "String"


Resources:

  # Auto Scaling Launch Configuration
  JiraLaunchConfiguration:
    Type: "AWS::AutoScaling::LaunchConfiguration"
    Properties:
      SpotPrice:
        Ref: "PMSpotPrice"
      AssociatePublicIpAddress: "true"
      KeyName:
        Ref: "PMKeyName"
      ImageId:
        Ref: "PMRegionAMI"
      InstanceType:
        Ref: "PMJiraInstanceType"
      IamInstanceProfile:
        Ref: "PMIAMS3CWInstanceProfile"
      SecurityGroups:
      - Ref: "PMMyJiraSG"
      BlockDeviceMappings:
        # Root Mount Device
        - DeviceName: "/dev/xvda"
          Ebs:
            # Increasing the volume size will actually cause to spin another
            # ec2 instance and shut down the existing old volume
            VolumeSize: "50" # Default: 8GB
            VolumeType: "gp2"
            #DeleteOnTermination: "false"
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash -xe
          yum install docker htop telnet git awslogs python-pip aws-cfn-bootstrap -y
          yum update -y

          echo "[plugins]
          cwlogs = cwlogs
          [default]
          region = ${AWS::Region}" > /etc/awslogs/awscli.conf
          service awslogs start
          chkconfig awslogs on

          useradd -u 1000 jira
          mkdir -p /home/jira/jira-data
          chown -R jira:jira /home/jira/jira-data
          chmod -R +x /home/jira/jira-data

          service docker start
          docker run -d -p 8000:8080 \
          -v /home/jira/jira-data:/home/www/public_html/jira-data.server.com \
          --name jira thinegan/debian-jira:v7.5.0

          # Backup Jira Data. Sync every 5 minutes
          crontab -l > mycron
          echo "# Upload" >> mycron
          echo "*/5 * * * * /usr/bin/aws s3 sync --sse AES256 /home/jira/ s3://dev-mys3bucket-1fkq1gtzkx8uk-s3backup-n8w7q6mofqyo/ > /var/log/jirasync.log 2>&1" >> mycron
          crontab mycron
          rm -rf mycron

          /opt/aws/bin/cfn-signal -e 0 -r 'server setup complete' "${WaitHandleWEB}"  > /tmp/userdata.log

  WaitHandleWEB:
    Type: "AWS::CloudFormation::WaitConditionHandle"

  WaitCondition:
    Type: "AWS::CloudFormation::WaitCondition"
    Properties:
      Handle: !Ref "WaitHandleWEB"
      Timeout: '600'

  # Auto Scaling Group Basic Setup
  JiraScalingGroup: 
    Type: "AWS::AutoScaling::AutoScalingGroup"
    Properties:
      MinSize: !Ref "PMAutoscaleMin"
      MaxSize: !Ref "PMAutoscaleMax"
      DesiredCapacity: !Ref "PMAutoscaleDes"
      LaunchConfigurationName:
        Ref: "JiraLaunchConfiguration"
      VPCZoneIdentifier:
        Ref: "PMPublicSubnets"
      LoadBalancerNames:
      - Ref: "PMJiraLoadBalancer"
      HealthCheckGracePeriod: "300"
      HealthCheckType: "ELB"
      Tags:
      - Key: "Name"
        Value: !Sub "${PMServerEnv}-Jiraserver"
        PropagateAtLaunch: 'true'

Outputs:

  JiraScalingGroup: 
    Description: "Auto Scaling Group Reference ID"
    Value: !Ref "JiraScalingGroup"
